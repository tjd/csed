In cryptography, it is sometimes necessary to calculate huge
exponents. For instance, in the popular RSA cryptosystem, it is not
unusual to have to calculate a ^ b, where b is near 2^1024, which is

17976931348623159077293051907890247336179769789423065727343008115773267
58055009631327084773224075360211201138798713933576587897688144166224928
47430639474124377767893424865485276302219601246094119453082952085005768
83815068234246288147391311054082723716335051068458629823994724593847971
6304835356329624224137216

This number is so big that not even the fastest computers can do this
many multiplications in a reasonable amount of time. For example,
suppose you had a trillion computers each doing a trillion
multiplications per second. Then it would take

57004475357125694689539104223396268823502567825415606695024759372695546
61513856010042759935388366819543382606540822975572640467047641318572198
35840434659197037569423594829671728507799344387665269701556798848952843
8551201241199355703764368040995282761394929943067804992387977103

*years* to do the multiplication. Yet such calculations are routinely
done every day in the blink of an eye.